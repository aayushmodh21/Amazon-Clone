{"ast":null,"code":"import { ADD_TO_BASKET, REMOVE_FROM_BASKET } from './constants';\nexport const initialState = {\n  basket: [{\n    id: \"12321341\",\n    title: \"The Lean Startup: How innovation works\",\n    price: 11.96,\n    rating: 3,\n    image: \"https://crazylister.com/wp-content/uploads/2018/05/Amazon-Top-Sellers_FB.png\"\n  }, {\n    id: \"12321341\",\n    title: \"The Lean Startup: How innovation works\",\n    price: 11.96,\n    rating: 3,\n    image: \"https://crazylister.com/wp-content/uploads/2018/05/Amazon-Top-Sellers_FB.png\"\n  }, {\n    id: \"12321341\",\n    title: \"The Lean Startup: How innovation works\",\n    price: 11.96,\n    rating: 3,\n    image: \"https://crazylister.com/wp-content/uploads/2018/05/Amazon-Top-Sellers_FB.png\"\n  }],\n  user: null\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nfunction reducer(state, action) {\n  console.log(action);\n\n  switch (action.type) {\n    case ADD_TO_BASKET:\n      //logic for adding item to basket\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case REMOVE_FROM_BASKET:\n      //logic for removing item from basket\n      //we cloned the basket\n      let newBasket = [...state.basket]; //whether product exists or not\n\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n\n      if (index >= 0) {\n        //index exists in basket, remove it...\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${action.id}) as it's not preent in basket`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/Apple/Desktop/aayush-amazon/amazon-clone/src/reducer.js"],"names":["ADD_TO_BASKET","REMOVE_FROM_BASKET","initialState","basket","id","title","price","rating","image","user","getBasketTotal","reduce","amount","item","reducer","state","action","console","log","type","newBasket","index","findIndex","basketItem","splice","warn"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,kBAAxB,QAAkD,aAAlD;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,CACJ;AACIC,IAAAA,EAAE,EAAC,UADP;AAEIC,IAAAA,KAAK,EAAC,wCAFV;AAGIC,IAAAA,KAAK,EAAC,KAHV;AAIIC,IAAAA,MAAM,EAAC,CAJX;AAKIC,IAAAA,KAAK,EAAC;AALV,GADI,EAQJ;AACIJ,IAAAA,EAAE,EAAC,UADP;AAEIC,IAAAA,KAAK,EAAC,wCAFV;AAGIC,IAAAA,KAAK,EAAC,KAHV;AAIIC,IAAAA,MAAM,EAAC,CAJX;AAKIC,IAAAA,KAAK,EAAC;AALV,GARI,EAeJ;AACIJ,IAAAA,EAAE,EAAC,UADP;AAEIC,IAAAA,KAAK,EAAC,wCAFV;AAGIC,IAAAA,KAAK,EAAC,KAHV;AAIIC,IAAAA,MAAM,EAAC,CAJX;AAKIC,IAAAA,KAAK,EAAC;AALV,GAfI,CADgB;AAwBxBC,EAAAA,IAAI,EAAE;AAxBkB,CAArB;AA2BP,OAAO,MAAMC,cAAc,GAAIP,MAAD,IAC1BA,MAD0B,aAC1BA,MAD0B,uBAC1BA,MAAM,CAAEQ,MAAR,CAAe,CAACC,MAAD,EAAQC,IAAR,KAAiBA,IAAI,CAACP,KAAL,GAAaM,MAA7C,EAAqD,CAArD,CADG;;AAIP,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,UAAOA,MAAM,CAACG,IAAd;AACI,SAAKnB,aAAL;AACI;AACA,aAAO,EACH,GAAGe,KADA;AAEHZ,QAAAA,MAAM,EAAE,CAAC,GAAGY,KAAK,CAACZ,MAAV,EAAkBa,MAAM,CAACH,IAAzB;AAFL,OAAP;;AAKJ,SAAKZ,kBAAL;AACI;AAEA;AACA,UAAImB,SAAS,GAAG,CAAC,GAAGL,KAAK,CAACZ,MAAV,CAAhB,CAJJ,CAMI;;AACA,YAAMkB,KAAK,GAAGN,KAAK,CAACZ,MAAN,CAAamB,SAAb,CAAwBC,UAAD,IAAgBA,UAAU,CAACnB,EAAX,KAAkBY,MAAM,CAACZ,EAAhE,CAAd;;AAEA,UAAGiB,KAAK,IAAE,CAAV,EAAY;AACR;AACAD,QAAAA,SAAS,CAACI,MAAV,CAAiBH,KAAjB,EAAwB,CAAxB;AACH,OAHD,MAII;AACAJ,QAAAA,OAAO,CAACQ,IAAR,CAAc,4BAA2BT,MAAM,CAACZ,EAAG,gCAAnD;AACH;;AAED,aAAO,EACH,GAAGW,KADA;AAEHZ,QAAAA,MAAM,EAAEiB;AAFL,OAAP;;AAKJ;AACI,aAAOL,KAAP;AA/BR;AAiCH;;AAED,eAAeD,OAAf","sourcesContent":["import { ADD_TO_BASKET, REMOVE_FROM_BASKET } from './constants';\n\nexport const initialState = {\n    basket: [\n        {\n            id:\"12321341\",\n            title:\"The Lean Startup: How innovation works\",\n            price:11.96,\n            rating:3,\n            image:\"https://crazylister.com/wp-content/uploads/2018/05/Amazon-Top-Sellers_FB.png\"\n        },\n        {\n            id:\"12321341\",\n            title:\"The Lean Startup: How innovation works\",\n            price:11.96,\n            rating:3,\n            image:\"https://crazylister.com/wp-content/uploads/2018/05/Amazon-Top-Sellers_FB.png\"\n        },\n        {\n            id:\"12321341\",\n            title:\"The Lean Startup: How innovation works\",\n            price:11.96,\n            rating:3,\n            image:\"https://crazylister.com/wp-content/uploads/2018/05/Amazon-Top-Sellers_FB.png\"\n        }\n    ],\n    user: null\n};\n\nexport const getBasketTotal = (basket) => \n    basket?.reduce((amount,item) => item.price + amount, 0);\n\n\nfunction reducer(state, action) {\n\n    console.log(action);\n\n    switch(action.type){\n        case ADD_TO_BASKET:\n            //logic for adding item to basket\n            return {\n                ...state,\n                basket: [...state.basket, action.item] \n            }\n\n        case REMOVE_FROM_BASKET:\n            //logic for removing item from basket\n\n            //we cloned the basket\n            let newBasket = [...state.basket];\n\n            //whether product exists or not\n            const index = state.basket.findIndex((basketItem) => basketItem.id === action.id);\n            \n            if(index>=0){\n                //index exists in basket, remove it...\n                newBasket.splice(index, 1);\n            }\n            else{\n                console.warn(`Cant remove product (id: ${action.id}) as it's not preent in basket`);\n            }\n\n            return {\n                ...state, \n                basket: newBasket \n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}