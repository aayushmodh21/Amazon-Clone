{"ast":null,"code":"import { ADD_TO_BASKET, REMOVE_FROM_BASKET } from './constants';\nexport const initialState = {\n  basket: [{\n    id: \"12321341\",\n    title: \"The Lean Startup: How innovation works\",\n    price: 11.96,\n    rating: 3,\n    image: \"https://crazylister.com/wp-content/uploads/2018/05/Amazon-Top-Sellers_FB.png\"\n  }, {\n    id: \"12321341\",\n    title: \"The Lean Startup: How innovation works\",\n    price: 11.96,\n    rating: 3,\n    image: \"https://crazylister.com/wp-content/uploads/2018/05/Amazon-Top-Sellers_FB.png\"\n  }, {\n    id: \"12321341\",\n    title: \"The Lean Startup: How innovation works\",\n    price: 11.96,\n    rating: 3,\n    image: \"https://crazylister.com/wp-content/uploads/2018/05/Amazon-Top-Sellers_FB.png\"\n  }],\n  user: null\n};\n\nfunction reducer(state, action) {\n  console.log(action);\n\n  switch (action.type) {\n    case ADD_TO_BASKET:\n      //logic for adding item to basket\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case REMOVE_FROM_BASKET:\n      //logic for removing item from basket\n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n\n      if (index >= 0) {//index exists in basket, remove it...\n      } else {\n        console.warn(`Cant remove product (id: ${action.id}) as it's not preent in basket`);\n      }\n\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/Apple/Desktop/aayush-amazon/amazon-clone/src/reducer.js"],"names":["ADD_TO_BASKET","REMOVE_FROM_BASKET","initialState","basket","id","title","price","rating","image","user","reducer","state","action","console","log","type","item","newBasket","index","findIndex","basketItem","warn"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,kBAAxB,QAAkD,aAAlD;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,CACJ;AACIC,IAAAA,EAAE,EAAC,UADP;AAEIC,IAAAA,KAAK,EAAC,wCAFV;AAGIC,IAAAA,KAAK,EAAC,KAHV;AAIIC,IAAAA,MAAM,EAAC,CAJX;AAKIC,IAAAA,KAAK,EAAC;AALV,GADI,EAQJ;AACIJ,IAAAA,EAAE,EAAC,UADP;AAEIC,IAAAA,KAAK,EAAC,wCAFV;AAGIC,IAAAA,KAAK,EAAC,KAHV;AAIIC,IAAAA,MAAM,EAAC,CAJX;AAKIC,IAAAA,KAAK,EAAC;AALV,GARI,EAeJ;AACIJ,IAAAA,EAAE,EAAC,UADP;AAEIC,IAAAA,KAAK,EAAC,wCAFV;AAGIC,IAAAA,KAAK,EAAC,KAHV;AAIIC,IAAAA,MAAM,EAAC,CAJX;AAKIC,IAAAA,KAAK,EAAC;AALV,GAfI,CADgB;AAwBxBC,EAAAA,IAAI,EAAE;AAxBkB,CAArB;;AA2BP,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,UAAOA,MAAM,CAACG,IAAd;AACI,SAAKf,aAAL;AACI;AACA,aAAO,EACH,GAAGW,KADA;AAEHR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACI,IAAzB;AAFL,OAAP;;AAKJ,SAAKf,kBAAL;AACI;AACA,UAAIgB,SAAS,GAAG,CAAC,GAAGN,KAAK,CAACR,MAAV,CAAhB;AAEA,YAAMe,KAAK,GAAGP,KAAK,CAACR,MAAN,CAAagB,SAAb,CAAwBC,UAAD,IAAgBA,UAAU,CAAChB,EAAX,KAAkBQ,MAAM,CAACR,EAAhE,CAAd;;AAEA,UAAGc,KAAK,IAAE,CAAV,EAAY,CACR;AACH,OAFD,MAGI;AACAL,QAAAA,OAAO,CAACQ,IAAR,CAAc,4BAA2BT,MAAM,CAACR,EAAG,gCAAnD;AACH;;AAED,aAAO,EAAE,GAAGO;AAAL,OAAP;;AAEJ;AACI,aAAOA,KAAP;AAxBR;AA0BH;;AAED,eAAeD,OAAf","sourcesContent":["import { ADD_TO_BASKET, REMOVE_FROM_BASKET } from './constants';\n\nexport const initialState = {\n    basket: [\n        {\n            id:\"12321341\",\n            title:\"The Lean Startup: How innovation works\",\n            price:11.96,\n            rating:3,\n            image:\"https://crazylister.com/wp-content/uploads/2018/05/Amazon-Top-Sellers_FB.png\"\n        },\n        {\n            id:\"12321341\",\n            title:\"The Lean Startup: How innovation works\",\n            price:11.96,\n            rating:3,\n            image:\"https://crazylister.com/wp-content/uploads/2018/05/Amazon-Top-Sellers_FB.png\"\n        },\n        {\n            id:\"12321341\",\n            title:\"The Lean Startup: How innovation works\",\n            price:11.96,\n            rating:3,\n            image:\"https://crazylister.com/wp-content/uploads/2018/05/Amazon-Top-Sellers_FB.png\"\n        }\n    ],\n    user: null\n};\n\nfunction reducer(state, action) {\n\n    console.log(action);\n\n    switch(action.type){\n        case ADD_TO_BASKET:\n            //logic for adding item to basket\n            return {\n                ...state,\n                basket: [...state.basket, action.item] \n            }\n\n        case REMOVE_FROM_BASKET:\n            //logic for removing item from basket\n            let newBasket = [...state.basket];\n\n            const index = state.basket.findIndex((basketItem) => basketItem.id === action.id);\n            \n            if(index>=0){\n                //index exists in basket, remove it...\n            }\n            else{\n                console.warn(`Cant remove product (id: ${action.id}) as it's not preent in basket`);\n            }\n\n            return { ...state }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}